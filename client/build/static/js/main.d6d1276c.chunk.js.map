{"version":3,"sources":["views/Main.jsx","components/PetForm.jsx","views/New.jsx","views/Show.jsx","views/Edit.jsx","App.js","serviceWorker.js","index.js"],"names":["Main","useState","pets","setPets","useEffect","axios","get","then","res","data","results","catch","err","console","log","className","map","p","i","key","name","type","desc","to","_id","PetForm","props","inputs","errors","handleInputChange","handleSubmit","submitValue","onSubmit","htmlFor","value","onChange","placeholder","message","skillOne","skillTwo","skillThree","New","initialPet","pet","setPet","setErrors","e","target","preventDefault","post","navigate","Show","id","onClick","delete","Edit","edit","setEdit","put","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d6d1276c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios';\n\nconst Main = () => {\n    const [pets, setPets] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:8000/api/pets')\n            .then((res) => setPets(res.data.results))\n            .catch((err) => console.log(err));\n    }, []);\n\n    return (\n        <div>\n            <h1 className=\"mb-5\">All Shelter Pets:</h1>\n            <table className=\"table table-dark col-8 mx-auto\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Description</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {pets.map((p, i) => {\n                        return (\n                            <tr key={i}>\n                                <td className=\"vertical-align-center\">\n                                    {p.name}\n                                </td>\n                                <td className=\"vertical-align-center\">\n                                    {p.type}\n                                </td>\n                                <td className=\"vertical-align-center\">\n                                    {p.desc}\n                                </td>\n                                <td>\n                                    <Link\n                                        to={`/edit/${p._id}`}\n                                        className=\"btn-sm btn-outline-warning mr-2\"\n                                    >\n                                        Edit\n                                    </Link>\n                                    <Link\n                                        to={`/pet/${p._id}`}\n                                        className=\"btn-sm btn-warning\"\n                                    >\n                                        Show\n                                    </Link>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst PetForm = (props) => {\n    const {\n        inputs,\n        errors,\n        handleInputChange,\n        handleSubmit,\n        submitValue,\n    } = props;\n\n    return (\n        <form className=\"col-5 mx-auto\" onSubmit={handleSubmit}>\n            <div className=\"form-group row\">\n                <label\n                    className=\"col-sm-3 col-form-label text-left\"\n                    htmlFor=\"name\"\n                >\n                    Name:\n                </label>\n                <div className=\"col-sm-9\">\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={inputs.name}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        placeholder=\"ex/ Professor Snuggles\"\n                    />\n                    <span className=\"text-danger\">\n                        {errors.name ? errors.name.message : ''}\n                    </span>\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label\n                    className=\"col-sm-3 col-form-label text-left\"\n                    htmlFor=\"type\"\n                >\n                    Type:\n                </label>\n                <div className=\"col-sm-9\">\n                    <input\n                        type=\"text\"\n                        name=\"type\"\n                        value={inputs.type}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        placeholder=\"ex/ Cat\"\n                    />\n                    <span className=\"text-danger\">\n                        {errors.type ? errors.type.message : ''}\n                    </span>\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label\n                    className=\"col-sm-3 col-form-label text-left\"\n                    htmlFor=\"desc\"\n                >\n                    Description:\n                </label>\n                <div className=\"col-sm-9\">\n                    <input\n                        type=\"desc\"\n                        name=\"desc\"\n                        value={inputs.desc}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        placeholder=\"ex/ Fuzzy\"\n                    />\n                    <span className=\"text-danger\">\n                        {errors.desc ? errors.desc.message : ''}\n                    </span>\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label\n                    className=\"col-sm-3 col-form-label text-left\"\n                    htmlFor=\"weaponOne\"\n                >\n                    Skill One:\n                </label>\n                <div className=\"col-sm-9\">\n                    <input\n                        type=\"text\"\n                        name=\"skillOne\"\n                        value={inputs.skillOne}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        placeholder=\"(optional)\"\n                    />\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label\n                    className=\"col-sm-3 col-form-label text-left\"\n                    htmlFor=\"skillTwo\"\n                >\n                    Skill Two:\n                </label>\n                <div className=\"col-sm-9\">\n                    <input\n                        type=\"text\"\n                        name=\"skillTwo\"\n                        value={inputs.skillTwo}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        placeholder=\"(optional)\"\n                    />\n                </div>\n            </div>\n            <div className=\"form-group row\">\n                <label\n                    className=\"col-sm-3 col-form-label text-left\"\n                    htmlFor=\"skillThree\"\n                >\n                    Skill Three:\n                </label>\n                <div className=\"col-sm-9\">\n                    <input\n                        type=\"text\"\n                        name=\"skillThree\"\n                        value={inputs.skillThree}\n                        onChange={handleInputChange}\n                        className=\"form-control\"\n                        placeholder=\"(optional)\"\n                    />\n                </div>\n            </div>\n            <input\n                type=\"submit\"\n                value={submitValue}\n                className=\"btn btn-warning my-5\"\n            />\n        </form>\n    );\n};\n\nexport default PetForm;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport PetForm from '../components/PetForm';\nimport { navigate } from '@reach/router';\n\nconst New = (props) => {\n    const initialPet = {\n        name: '',\n        type: '',\n        desc: '',\n        skillOne: '',\n        skillTwo: '',\n        skillThree: '',\n    };\n\n    const [pet, setPet] = useState(initialPet);\n\n    const [errors, setErrors] = useState(initialPet);\n\n    const handleInputChange = (e) => {\n        setPet({\n            ...pet,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        setErrors(initialPet);\n        e.preventDefault();\n        axios\n            .post('http://localhost:8000/api/create/pet', pet)\n            .then((res) => {\n                if (res.data.results) {\n                    setErrors(initialPet);\n                    navigate('/');\n                } else {\n                    console.log(res.data);\n                    setErrors(res.data);\n                }\n            })\n            .catch((err) => console.log(err));\n    };\n\n    return (\n        <div>\n            <h2 className=\"mb-5\">Add a Pet</h2>\n            <PetForm\n                inputs={pet}\n                errors={errors}\n                handleInputChange={handleInputChange}\n                handleSubmit={handleSubmit}\n                submitValue=\"Add\"\n            />\n        </div>\n    );\n};\n\nexport default New;\n","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst Show = (props) => {\n    const [pet, setPet] = useState({\n        name: '',\n        type: '',\n        desc: '',\n        skillOne: '',\n        skillTwo: '',\n        skillThree: '',\n    });\n\n    useEffect(() => {\n        axios\n            .get(`http://localhost:8000/api/pet/${props.id}`)\n            .then((res) => setPet(res.data.results))\n            .catch((err) => console.log(err));\n    }, [props]);\n\n    const destroyPet = () => {\n        axios\n            .delete(`http://localhost:8000/api/destroy/pet/${props.id}`)\n            .then((res) => navigate('/'))\n            .catch((err) => console.log(err));\n    };\n\n    return (\n        <div className=\"mx-auto p-5 col-6 bg-dark text-warning\">\n            <h2>{pet.name}</h2>\n            <p className=\"text-light mb-4\">Type: {pet.type}</p>\n            <p className=\"text-light mb-4\">Description: {pet.desc}</p>\n            <h3>Skills:</h3>\n            <p className=\"text-light\">{pet.skillOne}</p>\n            <p className=\"text-light\">{pet.skillTwo}</p>\n            <p className=\"text-light\">{pet.skillThree}</p>\n            <button\n                className=\"btn btn-success btn-outline-light m-5\"\n                onClick={destroyPet}\n            >\n                Adopt {pet.name}!\n            </button>\n        </div>\n    );\n};\n\nexport default Show;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nimport PetForm from '../components/PetForm';\n\nconst Edit = (props) => {\n    const initialPet = {\n        name: '',\n        type: '',\n        desc: '',\n        skillOne: '',\n        skillTwo: '',\n        skillThree: '',\n    };\n\n    const [edit, setEdit] = useState(initialPet);\n\n    const [errors, setErrors] = useState(initialPet);\n\n    useEffect(() => {\n        axios\n            .get(`http://localhost:8000/api/pet/${props.id}`)\n            .then((res) => setEdit(res.data.results))\n            .catch((err) => console.log(err));\n    }, [props]);\n\n    const handleInputChange = (e) => {\n        setEdit({\n            ...edit,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        setErrors(initialPet);\n        e.preventDefault();\n        axios\n            .put(`http://localhost:8000/api/update/pet/${props.id}`, edit)\n            .then((res) => {\n                if (res.data.results) {\n                    navigate(`/pet/${props.id}`);\n                } else {\n                    setErrors(res.data);\n                }\n            })\n            .catch((err) => console.log(err));\n    };\n\n    return (\n        <div>\n            <h2>Edit Pet:</h2>\n            <PetForm\n                inputs={edit}\n                errors={errors}\n                handleInputChange={handleInputChange}\n                handleSubmit={handleSubmit}\n                submitValue=\"Edit Pet\"\n            />\n        </div>\n    );\n};\n\nexport default Edit;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport { Router, Link } from '@reach/router';\nimport Main from './views/Main';\nimport New from './views/New';\nimport Show from './views/Show';\nimport Edit from './views/Edit';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\n                <Link className=\"navbar-brand text-warning\" to=\"/\">\n                    Pet Shelter\n                </Link>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div\n                    className=\"collapse navbar-collapse\"\n                    id=\"navbarSupportedContent\"\n                >\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <Link className=\"nav-link\" to=\"/\">\n                                Home <span className=\"sr-only\">(current)</span>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/new\">\n                                Add a Pet\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n            <Router>\n                <Main path=\"/\" />\n                <New path=\"/new\" />\n                <Show path=\"/pet/:id\" />\n                <Edit path=\"/edit/:id\" />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}